{"version":3,"sources":["services/ClubhouseService/ClubhouseService.ts","services/CSVService/CSVService.ts","services/FileService/FileService.ts","store/ServiceContext/ServiceContext.ts","molecules/AppDescription/AppDescription.tsx","molecules/SelectWithFilter/SelectWithFilter.tsx","molecules/SelectMilestone/SelectMilestone.tsx","molecules/SelectProject/SelectProject.tsx","molecules/SelectEpic/SelectEpic.tsx","molecules/SelectIteration/SelectIteration.tsx","molecules/SelectMember/SelectMember.tsx","molecules/SelectState/SelectState.tsx","molecules/CSVUpload/CSVUpload.tsx","molecules/StoryTable/StoryTable.tsx","pages/StoriesUpload/StoriesUpload.tsx","pages/ClubhouseSetupPage/ClubhouseSetupPage.tsx","App.tsx","utils/hooks/useLocalStorage/useLocalStorage.ts","index.tsx"],"names":["ClubhouseService","apiToken","clubhouseToken","headers","epics","iterations","milestones","projects","workflows","members","this","link","fetch","method","res","ok","json","console","error","bodyObject","body","JSON","stringify","length","getRequest","stories","postRequest","CSVService","dataSource","parsedContent","newLinebrk","split","i","push","CSVToArray","slice","delimiter","objPattern","RegExp","arrData","arrMatches","exec","strMatchedValue","strMatchedDelimiter","replace","FileService","reader","FileReader","file","Promise","resolve","reject","onload","loadEvent","fileContent","target","result","readAsBinaryString","e","ServiceContext","React","createContext","clubhouseService","fileService","csvService","setClubhouseApiToken","token","Title","Typography","Paragraph","AppDescription","useContext","TitleWrapper","onClick","type","styled","div","SelectWithFilter","filterFunction","rest","localDataSource","filter","notFoundContent","size","showSearch","style","width","filterOption","input","option","children","toLowerCase","indexOf","map","item","value","id","name","SelectMilestone","onChange","useState","setMilestones","onFocus","a","getMilestones","milestonesResult","placeholder","SelectProject","setProjects","getProjects","projectsResult","SelectEpic","selectedMilestoneId","setEpics","getEpics","epic","milestone_id","disabled","SelectIteration","iteration","setItaration","getIterations","iterationsResult","sort","b","created_at","SelectMember","setMembers","getMembers","memberResult","member","profile","SelectState","projectId","states","setStates","getWorkflows","workflowsResult","projectWorkflow","workflow","project_ids","CSVUpload","onCSVDataChange","onFileInputChange","getFileContent","csvContent","parseCSV","row","story_type","estimate","parseInt","description","multiple","showUploadList","beforeUpload","icon","UploadOutlined","StoryTable","key","columns","csvColumns","pagination","title","dataIndex","StoriesUpload","selectedProjectId","setSelectedProjectId","selectedStateId","setSelectedStateId","setSelectedMilestoneId","selectedEpicId","setSelectedEpicId","selectedIterationId","setSelectedIterationId","selectedMemberId","setSelectedMemberId","csvData","setCsvData","createStoriesLoading","setCreateStoriesLoading","onCreateStoriesClickHandler","project_id","epic_id","workflow_state_id","iteration_id","requested_by_id","createStories","marginBottom","marginTop","toString","textAlign","loading","Link","ClubhouseSetupPage","onTokenChanged","setToken","display","justifyContent","flexDirection","level","href","autoFocus","event","marginLeft","message","App","REACT_APP_CLUBHOUSE_API_TOKEN","process","initialValue","window","localStorage","getItem","parse","storedValue","setStoredValue","setItem","useLocalStorage","clubhouseApiToken","services","Provider","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c584589.chunk.js","sourcesContent":["export class ClubhouseService {\n  private clubhouseToken: string;\n  private headers: RequestInit[\"headers\"];\n  private epics: Epic[];\n  private iterations: Iteration[];\n  private milestones: Milestone[];\n  private projects: Project[];\n  private workflows: Workflow[];\n  private members: Member[];\n\n  constructor(apiToken: string) {\n    this.clubhouseToken = apiToken;\n    this.headers = {\n      \"Content-Type\": \"application/json\",\n      \"Clubhouse-Token\": this.clubhouseToken,\n    };\n    this.epics = [];\n    this.iterations = [];\n    this.milestones = [];\n    this.projects = [];\n    this.workflows = [];\n    this.members = [];\n  }\n\n  private async getRequest(link: string) {\n    try {\n      const res = await fetch(link, {\n        headers: this.headers,\n        method: \"get\",\n      });\n      if (res?.ok === true) {\n        return await res.json();\n      } else {\n        return res;\n      }\n    } catch (e) {\n      console.error(e);\n      return [];\n    }\n  }\n\n  private async postRequest(link: string, bodyObject: {}) {\n    try {\n      const res = await fetch(link, {\n        headers: this.headers,\n        method: \"post\",\n        body: JSON.stringify(bodyObject),\n      });\n      if (res?.ok === true) {\n        return await res.json();\n      } else {\n        return res;\n      }\n    } catch (e) {\n      console.error(e);\n      return [];\n    }\n  }\n\n  public async getEpics(caching: boolean = true): Promise<Epic[]> {\n    if (!caching || this.epics.length <= 0)\n      this.epics = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/epics\"\n      );\n\n    return this.epics;\n  }\n  public async getIterations(caching: boolean = true): Promise<Iteration[]> {\n    if (!caching || this.iterations.length <= 0)\n      this.iterations = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/iterations\"\n      );\n\n    return this.iterations;\n  }\n\n  public async getMilestones(caching: boolean = true): Promise<Milestone[]> {\n    if (!caching || this.milestones.length <= 0)\n      this.milestones = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/milestones\"\n      );\n\n    return this.milestones;\n  }\n\n  public async getProjects(caching: boolean = true): Promise<Project[]> {\n    if (!caching || this.projects.length <= 0)\n      this.projects = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/projects\"\n      );\n\n    return this.projects;\n  }\n  public async getWorkflows(caching: boolean = true): Promise<Workflow[]> {\n    if (!caching || this.workflows.length <= 0)\n      this.workflows = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/workflows\"\n      );\n\n    return this.workflows;\n  }\n\n  public async getMembers(caching: boolean = true): Promise<Member[]> {\n    if (!caching || this.members.length <= 0)\n      this.members = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/members\"\n      );\n\n    return this.members;\n  }\n\n  public createStories(stories: StoryPost[]) {\n    return this.postRequest(\"https://api.clubhouse.io/api/v3/stories/bulk\", {\n      stories,\n    });\n  }\n}\n","export class CSVService {\n  public parseCSV(dataSource: string): string[][] {\n    let parsedContent: string[][] = [];\n\n    let newLinebrk = dataSource.split(\"\\n\");\n    for (let i = 1; i < newLinebrk.length; i++) {\n      parsedContent.push(newLinebrk[i].split(\",\"));\n    }\n    return this.CSVToArray(dataSource).slice(1);\n  }\n\n  private CSVToArray(dataSource: string, delimiter: string = \",\") {\n    var objPattern = new RegExp(\n      // Delimiters.\n      \"(\\\\\" +\n        delimiter +\n        \"|\\\\r?\\\\n|\\\\r|^)\" +\n        // Quoted fields.\n        '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' +\n        // Standard fields.\n        '([^\"\\\\' +\n        delimiter +\n        \"\\\\r\\\\n]*))\",\n      \"gi\"\n    );\n\n    var arrData: string[][] = [[]];\n    var arrMatches = objPattern.exec(dataSource);\n\n    while (arrMatches) {\n      var strMatchedDelimiter = arrMatches[1];\n      if (strMatchedDelimiter.length && strMatchedDelimiter !== delimiter) {\n        arrData.push([]);\n      }\n\n      var strMatchedValue: string;\n\n      if (arrMatches[2]) {\n        strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', \"g\"), '\"');\n      } else {\n        strMatchedValue = arrMatches[3];\n      }\n\n      arrData[arrData.length - 1].push(strMatchedValue);\n      arrMatches = objPattern.exec(dataSource);\n    }\n\n    return arrData;\n  }\n}\n","export class FileService {\n  private reader: FileReader;\n\n  constructor() {\n    this.reader = new FileReader();\n  }\n\n  public getFileContent(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      this.reader.onload = (loadEvent: ProgressEvent<FileReader>) => {\n        const fileContent: string = loadEvent.target?.result as string;\n        resolve(fileContent);\n      };\n      try {\n        this.reader.readAsBinaryString(file);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n","import React from \"react\";\nimport { ClubhouseService, CSVService, FileService } from \"services\";\n\nexport const ServiceContext = React.createContext({\n  clubhouseService: new ClubhouseService(\"\"),\n  fileService: new FileService(),\n  csvService: new CSVService(),\n  setClubhouseApiToken: (token: string) => {},\n});\n","import styled from \"@emotion/styled\";\nimport { Button, Typography } from \"antd\";\nimport React, { useContext } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\nconst { Title, Paragraph } = Typography;\n\nexport const AppDescription = () => {\n  const { setClubhouseApiToken } = useContext(ServiceContext);\n  return (\n    <Typography>\n      <TitleWrapper>\n        <Title>Clubhouse CSV Importer</Title>\n        <Button onClick={() => setClubhouseApiToken(\"\")} type=\"ghost\">\n          Remove API Token\n        </Button>\n      </TitleWrapper>\n      <Paragraph>\n        To import a csv file to clubhouse you need to select a milestone, select\n        an epic and after that upload a csv file with the stories\n      </Paragraph>\n    </Typography>\n  );\n};\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { Spin } from \"antd\";\nimport Select from \"antd/lib/select\";\nimport React from \"react\";\n\nexport const SelectWithFilter: React.FunctionComponent<{\n  dataSource: { id: number | string; name: string }[];\n  disabled?: boolean;\n  placeholder: string;\n  onChange?: (value: any, option: any) => void;\n  onFocus?: React.FocusEventHandler<HTMLElement>;\n  filterFunction?: (item: any) => boolean;\n}> = ({ dataSource, filterFunction, ...rest }) => {\n  const localDataSource = filterFunction\n    ? dataSource.filter(filterFunction)\n    : dataSource;\n\n  const filterOption = (input: any, option: any) => {\n    return option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n  };\n\n  return (\n    <Select\n      {...rest}\n      notFoundContent={dataSource.length <= 0 ? <Spin size=\"small\" /> : null}\n      showSearch\n      style={{ width: 300 }}\n      filterOption={filterOption}\n    >\n      {localDataSource.map((item) => (\n        <option key={item.id} value={item.id}>\n          {item.name}\n        </option>\n      ))}\n    </Select>\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport { SelectWithFilter } from \"molecules/SelectWithFilter/SelectWithFilter\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\n\nexport const SelectMilestone: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n}> = ({ onChange }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [milestones, setMilestones] = useState<Milestone[]>([]);\n\n  const onFocus = async () => {\n    const milestonesResult = await clubhouseService.getMilestones();\n    setMilestones(milestonesResult);\n  };\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange }}\n      dataSource={milestones}\n      placeholder=\"Select a milestone\"\n    />\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport { SelectWithFilter } from \"molecules/SelectWithFilter/SelectWithFilter\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\n\nexport const SelectProject: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n}> = ({ onChange }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [projects, setProjects] = useState<Project[]>([]);\n\n  const onFocus = async () => {\n    const projectsResult = await clubhouseService.getProjects();\n    setProjects(projectsResult);\n  };\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange }}\n      dataSource={projects}\n      placeholder=\"Select a project\"\n    />\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\nimport { SelectWithFilter } from \"../SelectWithFilter/SelectWithFilter\";\n\nexport const SelectEpic: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n  selectedMilestoneId?: number;\n}> = ({ onChange, selectedMilestoneId }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [epics, setEpics] = useState<Epic[]>([]);\n\n  const onFocus = async () => setEpics(await clubhouseService.getEpics());\n\n  const filterFunction = (epic: Epic) =>\n    epic.milestone_id === selectedMilestoneId;\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange, filterFunction }}\n      disabled={!selectedMilestoneId}\n      dataSource={epics}\n      placeholder=\"Select a epic\"\n    />\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport { SelectWithFilter } from \"molecules/SelectWithFilter/SelectWithFilter\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\n\nexport const SelectIteration: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n}> = ({ onChange }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [iteration, setItaration] = useState<Iteration[]>([]);\n\n  const onFocus = async () => {\n    const iterationsResult = await clubhouseService.getIterations();\n    setItaration(\n      iterationsResult.sort((a, b) => {\n        if (a.created_at < b.created_at) return 1;\n        if (a.created_at > b.created_at) return -1;\n        return 0;\n      })\n    );\n  };\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange }}\n      dataSource={iteration}\n      placeholder=\"Select a iteration\"\n    />\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\nimport { SelectWithFilter } from \"../SelectWithFilter/SelectWithFilter\";\n\nexport const SelectMember: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n}> = ({ onChange }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [members, setMembers] = useState<Member[]>([]);\n\n  const onFocus = async () => {\n    const memberResult = await clubhouseService.getMembers();\n    setMembers(\n      memberResult\n        .filter((member) => !member.disabled)\n        .sort((a, b) => {\n          if (a.profile.name > b.profile.name) return 1;\n          if (a.profile.name < b.profile.name) return -1;\n          return 0;\n        })\n    );\n  };\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange }}\n      dataSource={members.map((member) => ({\n        ...member,\n        name: member.profile.name,\n      }))}\n      placeholder=\"Select a member\"\n    />\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport { SelectWithFilter } from \"molecules/SelectWithFilter/SelectWithFilter\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\n\nexport const SelectState: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n  projectId: number | undefined;\n}> = ({ onChange, projectId }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [states, setStates] = useState<WorkflowState[]>([]);\n\n  const onFocus = async () => {\n    const workflowsResult = await clubhouseService.getWorkflows();\n    if (projectId) {\n      const projectWorkflow = workflowsResult.filter(\n        (workflow) => workflow.project_ids.indexOf(projectId) >= 0\n      );\n      if (projectWorkflow.length === 1) {\n        setStates(projectWorkflow[0].states);\n      }\n    }\n  };\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange }}\n      disabled={!projectId}\n      dataSource={states}\n      placeholder=\"Select a state\"\n    />\n  );\n};\n","import { Button, Upload } from \"antd\";\nimport React, { useContext } from \"react\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\n\nexport const CSVUpload: React.FunctionComponent<{\n  onCSVDataChange: (csvData: Omit<StoryPost, \"project_id\">[]) => void;\n}> = ({ onCSVDataChange }) => {\n  const { fileService, csvService } = useContext(ServiceContext);\n\n  const onFileInputChange = async (file: File) => {\n    if (file) {\n      const fileContent = await fileService.getFileContent(file);\n      const csvContent = csvService.parseCSV(fileContent);\n      onCSVDataChange(\n        csvContent?.map((row: string[]) => ({\n          name: row[0],\n          story_type: row[1],\n          estimate: parseInt(row[2]),\n          description: row[3],\n        }))\n      );\n    }\n  };\n  return (\n    <Upload\n      name=\"file\"\n      multiple={false}\n      showUploadList={false}\n      beforeUpload={(file) => {\n        onFileInputChange(file);\n        return false;\n      }}\n    >\n      <Button type=\"primary\" icon={<UploadOutlined />}>\n        Upload CSV file\n      </Button>\n    </Upload>\n  );\n};\n","import Table from \"antd/lib/table/Table\";\nimport React from \"react\";\n\nexport const StoryTable: React.FunctionComponent<{\n  dataSource: StoryPost[];\n}> = ({ dataSource }) => {\n  return (\n    <Table\n      dataSource={dataSource.map((row, i) => ({ ...row, key: i }))}\n      columns={csvColumns}\n      pagination={false}\n    />\n  );\n};\n\nconst csvColumns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Story type\",\n    dataIndex: \"story_type\",\n    key: \"story_type\",\n  },\n  {\n    title: \"Estimation\",\n    dataIndex: \"estimate\",\n    key: \"estimate\",\n  },\n  {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\",\n  },\n];\n","import { Button, Space } from \"antd\";\nimport { SelectValue } from \"antd/lib/select\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\nimport {\n  AppDescription,\n  SelectMilestone,\n  SelectEpic,\n  CSVUpload,\n  StoryTable,\n  SelectProject,\n  SelectState,\n  SelectIteration,\n  SelectMember,\n} from \"molecules\";\n\nexport const StoriesUpload = () => {\n  const { clubhouseService } = useContext(ServiceContext);\n\n  const [selectedProjectId, setSelectedProjectId] = useState<number>();\n  const [selectedStateId, setSelectedStateId] = useState<number>();\n  const [selectedMilestoneId, setSelectedMilestoneId] = useState<number>();\n  const [selectedEpicId, setSelectedEpicId] = useState<number>();\n  const [selectedIterationId, setSelectedIterationId] = useState<number>();\n  const [selectedMemberId, setSelectedMemberId] = useState<string>();\n\n  const [csvData, setCsvData] = useState<any[]>([]);\n\n  const [createStoriesLoading, setCreateStoriesLoading] = useState(false);\n\n  const onProjectSelectChangeHandler = (value: SelectValue) => {\n    setSelectedProjectId(parseInt(value.toString()));\n  };\n  const onMilestoneSelectChangeHandler = (value: SelectValue) => {\n    setSelectedMilestoneId(parseInt(value.toString()));\n  };\n  const onEpicSelectChangeHandler = (value: SelectValue) => {\n    setSelectedEpicId(parseInt(value.toString()));\n  };\n  const onStateSelectChangeHandler = (value: SelectValue) => {\n    setSelectedStateId(parseInt(value.toString()));\n  };\n  const onIterationSelectChangeHandler = (value: SelectValue) => {\n    setSelectedIterationId(parseInt(value.toString()));\n  };\n  const onMemberSelectChangeHandler = (value: SelectValue) => {\n    setSelectedMemberId(value.toString());\n  };\n\n  const onCreateStoriesClickHandler = async () => {\n    if (!selectedProjectId) {\n      console.error(\"Please select an project before creating stories\");\n      return;\n    }\n    setCreateStoriesLoading(true);\n\n    const stories: StoryPost[] = csvData.map(\n      ({ name, story_type, estimate, description }: StoryPost) => ({\n        name,\n        story_type,\n        estimate,\n        project_id: selectedProjectId,\n        epic_id: selectedEpicId,\n        description,\n        workflow_state_id: selectedStateId,\n        iteration_id: selectedIterationId,\n        requested_by_id: selectedMemberId,\n      })\n    );\n\n    await clubhouseService.createStories(stories);\n    setCreateStoriesLoading(false);\n  };\n\n  return (\n    <>\n      <AppDescription />\n      <div>\n        <Space style={{ marginBottom: 16, marginTop: 16 }}>\n          <SelectProject onChange={onProjectSelectChangeHandler} />\n          <SelectState\n            onChange={onStateSelectChangeHandler}\n            projectId={selectedProjectId}\n          />\n        </Space>\n      </div>\n      <div>\n        <Space style={{ marginBottom: 16 }}>\n          <SelectMilestone onChange={onMilestoneSelectChangeHandler} />\n          <SelectEpic\n            onChange={onEpicSelectChangeHandler}\n            selectedMilestoneId={selectedMilestoneId}\n          />\n          <SelectIteration onChange={onIterationSelectChangeHandler} />\n        </Space>\n      </div>\n      <div>\n        <Space style={{ marginBottom: 16 }}>\n          <SelectMember onChange={onMemberSelectChangeHandler} />\n        </Space>\n      </div>\n      <div style={{ marginBottom: 16, textAlign: \"right\", width: \"100%\" }}>\n        <CSVUpload onCSVDataChange={setCsvData} />\n      </div>\n      <StoryTable dataSource={csvData} />\n      <div\n        style={{\n          marginTop: 16,\n          textAlign: \"right\",\n          width: \"100%\",\n        }}\n      >\n        <Button\n          disabled={csvData.length <= 0}\n          type=\"primary\"\n          onClick={onCreateStoriesClickHandler}\n          loading={createStoriesLoading}\n        >\n          Create Stories\n        </Button>\n      </div>\n    </>\n  );\n};\n","import { Button, Input, message, Typography } from \"antd\";\nimport React, { useState } from \"react\";\nconst { Title, Link } = Typography;\n\nexport const ClubhouseSetupPage: React.FunctionComponent<{\n  onTokenChanged: (token: string) => void;\n}> = ({ onTokenChanged }) => {\n  const [token, setToken] = useState<string>(\"\");\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setToken(event.target.value);\n  };\n  const onClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (token.length <= 0) {\n      message.error(\"Add a valid token\");\n    } else {\n      onTokenChanged(token);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: 80,\n          marginBottom: 80,\n        }}\n      >\n        <Typography style={{ width: 800, textAlign: \"center\" }}>\n          <Title>Welcome to Clubhouse CSV Uploader</Title>\n          <Title level={5}>\n            To use the CSV Uploader we need you to generate a Clubhouse API\n            Token and to pass it in the Token Value input. Please see this page{\" \"}\n            <Link\n              target=\"blank\"\n              href=\"https://help.clubhouse.io/hc/en-us/articles/205701199-Clubhouse-API-Tokens\"\n            >\n              Clubhouse API Tokens\n            </Link>{\" \"}\n            for more details on how to generate a token\n          </Title>\n        </Typography>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div style={{ width: 600, display: \"flex\" }}>\n          <Input\n            autoFocus={true}\n            size=\"large\"\n            onChange={onChange}\n            value={token}\n          />\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            style={{ marginLeft: 8 }}\n            onClick={onClick}\n          >\n            Continue\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import \"antd/dist/antd.css\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { ClubhouseService, CSVService, FileService } from \"./services\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\nimport { ClubhouseSetupPage, StoriesUpload } from \"pages\";\nimport { useLocalStorage } from \"utils\";\n\nfunction App() {\n  const { REACT_APP_CLUBHOUSE_API_TOKEN } = process.env;\n  const [clubhouseApiToken, setClubhouseApiToken] = useLocalStorage(\n    \"clubhouseApiToken\",\n    REACT_APP_CLUBHOUSE_API_TOKEN\n  );\n\n  if (REACT_APP_CLUBHOUSE_API_TOKEN) {\n    setClubhouseApiToken(REACT_APP_CLUBHOUSE_API_TOKEN);\n  }\n\n  if (!clubhouseApiToken) {\n    return <ClubhouseSetupPage onTokenChanged={setClubhouseApiToken} />;\n  }\n\n  const services = {\n    clubhouseService: new ClubhouseService(clubhouseApiToken),\n    fileService: new FileService(),\n    csvService: new CSVService(),\n    setClubhouseApiToken,\n  };\n\n  return (\n    <ServiceContext.Provider value={services}>\n      <div className=\"App\">\n        <StoriesUpload />\n      </div>\n    </ServiceContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nexport const useLocalStorage = (key: string, initialValue?: string) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: any) => {\n    try {\n      setStoredValue(value);\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}