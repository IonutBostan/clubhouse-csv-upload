{"version":3,"sources":["services/ClubhouseService/ClubhouseService.ts","services/CSVService/CSVService.ts","services/FileService/FileService.ts","store/ServiceContext/ServiceContext.ts","molecules/AppDescription/AppDescription.tsx","molecules/SelectWithFilter/SelectWithFilter.tsx","molecules/SelectMilestone/SelectMilestone.tsx","molecules/SelectProject/SelectProject.tsx","molecules/SelectEpic/SelectEpic.tsx","molecules/SelectIteration/SelectIteration.tsx","molecules/SelectMember/SelectMember.tsx","molecules/SelectState/SelectState.tsx","molecules/CSVUpload/CSVUpload.tsx","molecules/StoryTable/StoryTable.tsx","pages/StoriesUpload/StoriesUpload.tsx","App.tsx","index.tsx"],"names":["ClubhouseService","clubhouseToken","headers","epics","iterations","milestones","projects","workflows","members","REACT_APP_CLUBHOUSE_API_TOKEN","process","Error","this","link","fetch","method","res","ok","json","console","error","bodyObject","body","JSON","stringify","length","getRequest","stories","postRequest","CSVService","dataSource","parsedContent","newLinebrk","split","i","push","CSVToArray","slice","delimiter","objPattern","RegExp","arrData","arrMatches","exec","strMatchedValue","strMatchedDelimiter","replace","FileService","reader","FileReader","file","Promise","resolve","reject","onload","loadEvent","fileContent","target","result","readAsBinaryString","e","ServiceContext","React","createContext","clubhouseService","fileService","csvService","Title","Typography","Paragraph","AppDescription","SelectWithFilter","filterFunction","rest","localDataSource","filter","notFoundContent","size","showSearch","style","width","filterOption","input","option","children","toLowerCase","indexOf","map","item","value","id","name","SelectMilestone","onChange","useContext","useState","setMilestones","onFocus","a","getMilestones","milestonesResult","placeholder","SelectProject","setProjects","getProjects","projectsResult","SelectEpic","selectedMilestoneId","setEpics","getEpics","epic","milestone_id","disabled","SelectIteration","iteration","setItaration","getIterations","iterationsResult","sort","b","created_at","SelectMember","setMembers","getMembers","memberResult","member","profile","SelectState","projectId","states","setStates","getWorkflows","workflowsResult","projectWorkflow","workflow","project_ids","CSVUpload","onCSVDataChange","onFileInputChange","getFileContent","csvContent","parseCSV","row","story_type","estimate","parseInt","description","multiple","showUploadList","beforeUpload","type","icon","UploadOutlined","StoryTable","key","columns","csvColumns","pagination","title","dataIndex","StoriesUpload","selectedProjectId","setSelectedProjectId","selectedStateId","setSelectedStateId","setSelectedMilestoneId","selectedEpicId","setSelectedEpicId","selectedIterationId","setSelectedIterationId","selectedMemberId","setSelectedMemberId","csvData","setCsvData","createStoriesLoading","setCreateStoriesLoading","onCreateStoriesClickHandler","project_id","epic_id","workflow_state_id","iteration_id","requested_by_id","createStories","marginBottom","marginTop","toString","textAlign","onClick","loading","App","services","Provider","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a7399d4.chunk.js","sourcesContent":["export class ClubhouseService {\n  private clubhouseToken: string;\n  private headers: RequestInit[\"headers\"];\n  private epics: Epic[];\n  private iterations: Iteration[];\n  private milestones: Milestone[];\n  private projects: Project[];\n  private workflows: Workflow[];\n  private members: Member[];\n\n  constructor() {\n    const { REACT_APP_CLUBHOUSE_API_TOKEN } = process.env;\n    if (!REACT_APP_CLUBHOUSE_API_TOKEN) {\n      throw new Error(\"The clubhouse api token was not found in .env file\");\n    }\n    this.clubhouseToken = REACT_APP_CLUBHOUSE_API_TOKEN;\n    this.headers = {\n      \"Content-Type\": \"application/json\",\n      \"Clubhouse-Token\": this.clubhouseToken,\n    };\n    this.epics = [];\n    this.iterations = [];\n    this.milestones = [];\n    this.projects = [];\n    this.workflows = [];\n    this.members = [];\n  }\n\n  private async getRequest(link: string) {\n    try {\n      const res = await fetch(link, {\n        headers: this.headers,\n        method: \"get\",\n      });\n      if (res?.ok === true) {\n        return await res.json();\n      } else {\n        return res;\n      }\n    } catch (e) {\n      console.error(e);\n      return [];\n    }\n  }\n\n  private async postRequest(link: string, bodyObject: {}) {\n    try {\n      const res = await fetch(link, {\n        headers: this.headers,\n        method: \"post\",\n        body: JSON.stringify(bodyObject),\n      });\n      if (res?.ok === true) {\n        return await res.json();\n      } else {\n        return res;\n      }\n    } catch (e) {\n      console.error(e);\n      return [];\n    }\n  }\n\n  public async getEpics(caching: boolean = true): Promise<Epic[]> {\n    if (!caching || this.epics.length <= 0)\n      this.epics = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/epics\"\n      );\n\n    return this.epics;\n  }\n  public async getIterations(caching: boolean = true): Promise<Iteration[]> {\n    if (!caching || this.iterations.length <= 0)\n      this.iterations = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/iterations\"\n      );\n\n    return this.iterations;\n  }\n\n  public async getMilestones(caching: boolean = true): Promise<Milestone[]> {\n    if (!caching || this.milestones.length <= 0)\n      this.milestones = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/milestones\"\n      );\n\n    return this.milestones;\n  }\n\n  public async getProjects(caching: boolean = true): Promise<Project[]> {\n    if (!caching || this.projects.length <= 0)\n      this.projects = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/projects\"\n      );\n\n    return this.projects;\n  }\n  public async getWorkflows(caching: boolean = true): Promise<Workflow[]> {\n    if (!caching || this.workflows.length <= 0)\n      this.workflows = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/workflows\"\n      );\n\n    return this.workflows;\n  }\n\n  public async getMembers(caching: boolean = true): Promise<Member[]> {\n    if (!caching || this.members.length <= 0)\n      this.members = await this.getRequest(\n        \"https://api.clubhouse.io/api/v3/members\"\n      );\n\n    return this.members;\n  }\n\n  public createStories(stories: StoryPost[]) {\n    return this.postRequest(\"https://api.clubhouse.io/api/v3/stories/bulk\", {\n      stories,\n    });\n  }\n}\n","export class CSVService {\n  public parseCSV(dataSource: string): string[][] {\n    let parsedContent: string[][] = [];\n\n    let newLinebrk = dataSource.split(\"\\n\");\n    for (let i = 1; i < newLinebrk.length; i++) {\n      parsedContent.push(newLinebrk[i].split(\",\"));\n    }\n    return this.CSVToArray(dataSource).slice(1);\n  }\n\n  private CSVToArray(dataSource: string, delimiter: string = \",\") {\n    var objPattern = new RegExp(\n      // Delimiters.\n      \"(\\\\\" +\n        delimiter +\n        \"|\\\\r?\\\\n|\\\\r|^)\" +\n        // Quoted fields.\n        '(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|' +\n        // Standard fields.\n        '([^\"\\\\' +\n        delimiter +\n        \"\\\\r\\\\n]*))\",\n      \"gi\"\n    );\n\n    var arrData: string[][] = [[]];\n    var arrMatches = objPattern.exec(dataSource);\n\n    while (arrMatches) {\n      var strMatchedDelimiter = arrMatches[1];\n      if (strMatchedDelimiter.length && strMatchedDelimiter !== delimiter) {\n        arrData.push([]);\n      }\n\n      var strMatchedValue: string;\n\n      if (arrMatches[2]) {\n        strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', \"g\"), '\"');\n      } else {\n        strMatchedValue = arrMatches[3];\n      }\n\n      arrData[arrData.length - 1].push(strMatchedValue);\n      arrMatches = objPattern.exec(dataSource);\n    }\n\n    return arrData;\n  }\n}\n","export class FileService {\n  private reader: FileReader;\n\n  constructor() {\n    this.reader = new FileReader();\n  }\n\n  public getFileContent(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      this.reader.onload = (loadEvent: ProgressEvent<FileReader>) => {\n        const fileContent: string = loadEvent.target?.result as string;\n        resolve(fileContent);\n      };\n      try {\n        this.reader.readAsBinaryString(file);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n","import React from \"react\";\nimport { ClubhouseService, CSVService, FileService } from \"services\";\n\nexport const ServiceContext = React.createContext({\n  clubhouseService: new ClubhouseService(),\n  fileService: new FileService(),\n  csvService: new CSVService(),\n});\n","import { Typography } from \"antd\";\nimport React from \"react\";\nconst { Title, Paragraph } = Typography;\n\nexport const AppDescription = () => (\n  <Typography>\n    <Title>Clubhouse CSV Importer</Title>\n    <Paragraph>\n      To import a csv file to clubhouse you need to select a milestone, select\n      an epic and after that upload a csv file with the stories\n    </Paragraph>\n  </Typography>\n);\n","import { Spin } from \"antd\";\nimport Select from \"antd/lib/select\";\nimport React from \"react\";\n\nexport const SelectWithFilter: React.FunctionComponent<{\n  dataSource: { id: number | string; name: string }[];\n  disabled?: boolean;\n  placeholder: string;\n  onChange?: (value: any, option: any) => void;\n  onFocus?: React.FocusEventHandler<HTMLElement>;\n  filterFunction?: (item: any) => boolean;\n}> = ({ dataSource, filterFunction, ...rest }) => {\n  const localDataSource = filterFunction\n    ? dataSource.filter(filterFunction)\n    : dataSource;\n\n  const filterOption = (input: any, option: any) => {\n    return option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n  };\n\n  return (\n    <Select\n      {...rest}\n      notFoundContent={dataSource.length <= 0 ? <Spin size=\"small\" /> : null}\n      showSearch\n      style={{ width: 300 }}\n      filterOption={filterOption}\n    >\n      {localDataSource.map((item) => (\n        <option key={item.id} value={item.id}>\n          {item.name}\n        </option>\n      ))}\n    </Select>\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport { SelectWithFilter } from \"molecules/SelectWithFilter/SelectWithFilter\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\n\nexport const SelectMilestone: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n}> = ({ onChange }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [milestones, setMilestones] = useState<Milestone[]>([]);\n\n  const onFocus = async () => {\n    const milestonesResult = await clubhouseService.getMilestones();\n    setMilestones(milestonesResult);\n  };\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange }}\n      dataSource={milestones}\n      placeholder=\"Select a milestone\"\n    />\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport { SelectWithFilter } from \"molecules/SelectWithFilter/SelectWithFilter\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\n\nexport const SelectProject: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n}> = ({ onChange }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [projects, setProjects] = useState<Project[]>([]);\n\n  const onFocus = async () => {\n    const projectsResult = await clubhouseService.getProjects();\n    setProjects(projectsResult);\n  };\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange }}\n      dataSource={projects}\n      placeholder=\"Select a project\"\n    />\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\nimport { SelectWithFilter } from \"../SelectWithFilter/SelectWithFilter\";\n\nexport const SelectEpic: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n  selectedMilestoneId?: number;\n}> = ({ onChange, selectedMilestoneId }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [epics, setEpics] = useState<Epic[]>([]);\n\n  const onFocus = async () => setEpics(await clubhouseService.getEpics());\n\n  const filterFunction = (epic: Epic) =>\n    epic.milestone_id === selectedMilestoneId;\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange, filterFunction }}\n      disabled={!selectedMilestoneId}\n      dataSource={epics}\n      placeholder=\"Select a epic\"\n    />\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport { SelectWithFilter } from \"molecules/SelectWithFilter/SelectWithFilter\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\n\nexport const SelectIteration: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n}> = ({ onChange }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [iteration, setItaration] = useState<Iteration[]>([]);\n\n  const onFocus = async () => {\n    const iterationsResult = await clubhouseService.getIterations();\n    setItaration(\n      iterationsResult.sort((a, b) => {\n        if (a.created_at < b.created_at) return 1;\n        if (a.created_at > b.created_at) return -1;\n        return 0;\n      })\n    );\n  };\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange }}\n      dataSource={iteration}\n      placeholder=\"Select a iteration\"\n    />\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\nimport { SelectWithFilter } from \"../SelectWithFilter/SelectWithFilter\";\n\nexport const SelectMember: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n}> = ({ onChange }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [members, setMembers] = useState<Member[]>([]);\n\n  const onFocus = async () => {\n    const memberResult = await clubhouseService.getMembers();\n    setMembers(\n      memberResult\n        .filter((member) => !member.disabled)\n        .sort((a, b) => {\n          if (a.profile.name > b.profile.name) return 1;\n          if (a.profile.name < b.profile.name) return -1;\n          return 0;\n        })\n    );\n  };\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange }}\n      dataSource={members.map((member) => ({\n        ...member,\n        name: member.profile.name,\n      }))}\n      placeholder=\"Select a project\"\n    />\n  );\n};\n","import { SelectValue } from \"antd/lib/select\";\nimport { SelectWithFilter } from \"molecules/SelectWithFilter/SelectWithFilter\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\n\nexport const SelectState: React.FunctionComponent<{\n  onChange: (value: SelectValue) => void;\n  projectId: number | undefined;\n}> = ({ onChange, projectId }) => {\n  const { clubhouseService } = useContext(ServiceContext);\n  const [states, setStates] = useState<WorkflowState[]>([]);\n\n  const onFocus = async () => {\n    const workflowsResult = await clubhouseService.getWorkflows();\n    if (projectId) {\n      const projectWorkflow = workflowsResult.filter(\n        (workflow) => workflow.project_ids.indexOf(projectId) >= 0\n      );\n      if (projectWorkflow.length === 1) {\n        setStates(projectWorkflow[0].states);\n      }\n    }\n  };\n\n  return (\n    <SelectWithFilter\n      {...{ onFocus, onChange }}\n      dataSource={states}\n      placeholder=\"Select a state\"\n    />\n  );\n};\n","import { Button, Upload } from \"antd\";\nimport React, { useContext } from \"react\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\n\nexport const CSVUpload: React.FunctionComponent<{\n  onCSVDataChange: (csvData: Omit<StoryPost, \"project_id\">[]) => void;\n}> = ({ onCSVDataChange }) => {\n  const { fileService, csvService } = useContext(ServiceContext);\n\n  const onFileInputChange = async (file: File) => {\n    if (file) {\n      const fileContent = await fileService.getFileContent(file);\n      const csvContent = csvService.parseCSV(fileContent);\n      onCSVDataChange(\n        csvContent?.map((row: string[]) => ({\n          name: row[0],\n          story_type: row[1],\n          estimate: parseInt(row[2]),\n          description: row[3],\n        }))\n      );\n    }\n  };\n  return (\n    <Upload\n      name=\"file\"\n      multiple={false}\n      showUploadList={false}\n      beforeUpload={(file) => {\n        onFileInputChange(file);\n        return false;\n      }}\n    >\n      <Button type=\"primary\" icon={<UploadOutlined />}>\n        Upload CSV file\n      </Button>\n    </Upload>\n  );\n};\n","import Table from \"antd/lib/table/Table\";\nimport React from \"react\";\n\nexport const StoryTable: React.FunctionComponent<{\n  dataSource: StoryPost[];\n}> = ({ dataSource }) => {\n  return (\n    <Table\n      dataSource={dataSource.map((row, i) => ({ ...row, key: i }))}\n      columns={csvColumns}\n      pagination={false}\n    />\n  );\n};\n\nconst csvColumns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Story type\",\n    dataIndex: \"story_type\",\n    key: \"story_type\",\n  },\n  {\n    title: \"Estimation\",\n    dataIndex: \"estimate\",\n    key: \"estimate\",\n  },\n  {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\",\n  },\n];\n","import { Button, Space } from \"antd\";\nimport { SelectValue } from \"antd/lib/select\";\nimport React, { useContext, useState } from \"react\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\nimport {\n  AppDescription,\n  SelectMilestone,\n  SelectEpic,\n  CSVUpload,\n  StoryTable,\n  SelectProject,\n  SelectState,\n  SelectIteration,\n  SelectMember,\n} from \"molecules\";\n\nexport const StoriesUpload = () => {\n  const { clubhouseService } = useContext(ServiceContext);\n\n  const [selectedProjectId, setSelectedProjectId] = useState<number>();\n  const [selectedStateId, setSelectedStateId] = useState<number>();\n  const [selectedMilestoneId, setSelectedMilestoneId] = useState<number>();\n  const [selectedEpicId, setSelectedEpicId] = useState<number>();\n  const [selectedIterationId, setSelectedIterationId] = useState<number>();\n  const [selectedMemberId, setSelectedMemberId] = useState<string>();\n\n  const [csvData, setCsvData] = useState<any[]>([]);\n\n  const [createStoriesLoading, setCreateStoriesLoading] = useState(false);\n\n  const onProjectSelectChangeHandler = (value: SelectValue) => {\n    setSelectedProjectId(parseInt(value.toString()));\n  };\n  const onMilestoneSelectChangeHandler = (value: SelectValue) => {\n    setSelectedMilestoneId(parseInt(value.toString()));\n  };\n  const onEpicSelectChangeHandler = (value: SelectValue) => {\n    setSelectedEpicId(parseInt(value.toString()));\n  };\n  const onStateSelectChangeHandler = (value: SelectValue) => {\n    setSelectedStateId(parseInt(value.toString()));\n  };\n  const onIterationSelectChangeHandler = (value: SelectValue) => {\n    setSelectedIterationId(parseInt(value.toString()));\n  };\n  const onMemberSelectChangeHandler = (value: SelectValue) => {\n    setSelectedMemberId(value.toString());\n  };\n\n  const onCreateStoriesClickHandler = async () => {\n    if (!selectedProjectId) {\n      console.error(\"Please select an project before creating stories\");\n      return;\n    }\n    setCreateStoriesLoading(true);\n\n    const stories: StoryPost[] = csvData.map(\n      ({ name, story_type, estimate, description }: StoryPost) => ({\n        name,\n        story_type,\n        estimate,\n        project_id: selectedProjectId,\n        epic_id: selectedEpicId,\n        description,\n        workflow_state_id: selectedStateId,\n        iteration_id: selectedIterationId,\n        requested_by_id: selectedMemberId,\n      })\n    );\n\n    await clubhouseService.createStories(stories);\n    setCreateStoriesLoading(false);\n  };\n\n  return (\n    <>\n      <AppDescription />\n      <div>\n        <Space style={{ marginBottom: 16, marginTop: 16 }}>\n          <SelectProject onChange={onProjectSelectChangeHandler} />\n          <SelectState\n            onChange={onStateSelectChangeHandler}\n            projectId={selectedProjectId}\n          />\n        </Space>\n      </div>\n      <div>\n        <Space style={{ marginBottom: 16 }}>\n          <SelectMilestone onChange={onMilestoneSelectChangeHandler} />\n          <SelectEpic\n            onChange={onEpicSelectChangeHandler}\n            selectedMilestoneId={selectedMilestoneId}\n          />\n          <SelectIteration onChange={onIterationSelectChangeHandler} />\n        </Space>\n      </div>\n      <div>\n        <Space style={{ marginBottom: 16 }}>\n          <SelectMember onChange={onMemberSelectChangeHandler} />\n        </Space>\n      </div>\n      <div style={{ marginBottom: 16, textAlign: \"right\", width: \"100%\" }}>\n        <CSVUpload onCSVDataChange={setCsvData} />\n      </div>\n      <StoryTable dataSource={csvData} />\n      <div\n        style={{\n          marginTop: 16,\n          textAlign: \"right\",\n          width: \"100%\",\n        }}\n      >\n        <Button\n          disabled={csvData.length <= 0}\n          type=\"primary\"\n          onClick={onCreateStoriesClickHandler}\n          loading={createStoriesLoading}\n        >\n          Create Stories\n        </Button>\n      </div>\n    </>\n  );\n};\n","import \"antd/dist/antd.css\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { ClubhouseService, CSVService, FileService } from \"./services\";\nimport { ServiceContext } from \"store/ServiceContext/ServiceContext\";\nimport { StoriesUpload } from \"./pages\";\n\nfunction App() {\n  const services = {\n    clubhouseService: new ClubhouseService(),\n    fileService: new FileService(),\n    csvService: new CSVService(),\n  };\n\n  return (\n    <ServiceContext.Provider value={services}>\n      <div className=\"App\">\n        <StoriesUpload />\n      </div>\n    </ServiceContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}